// Generated by view binder compiler. Do not edit!
package edu.pdx.cs410j.moes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.pdx.cs410j.moes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PromptinputBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText BeginTimeSearch;

  @NonNull
  public final EditText CustomerNameSearch;

  @NonNull
  public final EditText EndTimeSearch;

  @NonNull
  public final Button SubmitOneInput;

  private PromptinputBinding(@NonNull ConstraintLayout rootView, @NonNull EditText BeginTimeSearch,
      @NonNull EditText CustomerNameSearch, @NonNull EditText EndTimeSearch,
      @NonNull Button SubmitOneInput) {
    this.rootView = rootView;
    this.BeginTimeSearch = BeginTimeSearch;
    this.CustomerNameSearch = CustomerNameSearch;
    this.EndTimeSearch = EndTimeSearch;
    this.SubmitOneInput = SubmitOneInput;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PromptinputBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PromptinputBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.promptinput, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PromptinputBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BeginTimeSearch;
      EditText BeginTimeSearch = ViewBindings.findChildViewById(rootView, id);
      if (BeginTimeSearch == null) {
        break missingId;
      }

      id = R.id.CustomerNameSearch;
      EditText CustomerNameSearch = ViewBindings.findChildViewById(rootView, id);
      if (CustomerNameSearch == null) {
        break missingId;
      }

      id = R.id.EndTimeSearch;
      EditText EndTimeSearch = ViewBindings.findChildViewById(rootView, id);
      if (EndTimeSearch == null) {
        break missingId;
      }

      id = R.id.SubmitOneInput;
      Button SubmitOneInput = ViewBindings.findChildViewById(rootView, id);
      if (SubmitOneInput == null) {
        break missingId;
      }

      return new PromptinputBinding((ConstraintLayout) rootView, BeginTimeSearch,
          CustomerNameSearch, EndTimeSearch, SubmitOneInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
