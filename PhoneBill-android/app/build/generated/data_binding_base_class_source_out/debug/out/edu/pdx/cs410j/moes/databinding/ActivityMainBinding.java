// Generated by view binder compiler. Do not edit!
package edu.pdx.cs410j.moes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.pdx.cs410j.moes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button CreateBlankPhoneBill;

  @NonNull
  public final ConstraintLayout CustomerRequest;

  @NonNull
  public final EditText EditTextCustomer;

  @NonNull
  public final Button HelpMenuButton;

  @NonNull
  public final Button SearchCustomerPrint;

  @NonNull
  public final Button SearchInRangeCalls;

  @NonNull
  public final Button button2;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button CreateBlankPhoneBill, @NonNull ConstraintLayout CustomerRequest,
      @NonNull EditText EditTextCustomer, @NonNull Button HelpMenuButton,
      @NonNull Button SearchCustomerPrint, @NonNull Button SearchInRangeCalls,
      @NonNull Button button2) {
    this.rootView = rootView;
    this.CreateBlankPhoneBill = CreateBlankPhoneBill;
    this.CustomerRequest = CustomerRequest;
    this.EditTextCustomer = EditTextCustomer;
    this.HelpMenuButton = HelpMenuButton;
    this.SearchCustomerPrint = SearchCustomerPrint;
    this.SearchInRangeCalls = SearchInRangeCalls;
    this.button2 = button2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CreateBlankPhoneBill;
      Button CreateBlankPhoneBill = ViewBindings.findChildViewById(rootView, id);
      if (CreateBlankPhoneBill == null) {
        break missingId;
      }

      ConstraintLayout CustomerRequest = (ConstraintLayout) rootView;

      id = R.id.EditTextCustomer;
      EditText EditTextCustomer = ViewBindings.findChildViewById(rootView, id);
      if (EditTextCustomer == null) {
        break missingId;
      }

      id = R.id.HelpMenuButton;
      Button HelpMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (HelpMenuButton == null) {
        break missingId;
      }

      id = R.id.SearchCustomerPrint;
      Button SearchCustomerPrint = ViewBindings.findChildViewById(rootView, id);
      if (SearchCustomerPrint == null) {
        break missingId;
      }

      id = R.id.SearchInRangeCalls;
      Button SearchInRangeCalls = ViewBindings.findChildViewById(rootView, id);
      if (SearchInRangeCalls == null) {
        break missingId;
      }

      id = R.id.button2;
      Button button2 = ViewBindings.findChildViewById(rootView, id);
      if (button2 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, CreateBlankPhoneBill,
          CustomerRequest, EditTextCustomer, HelpMenuButton, SearchCustomerPrint,
          SearchInRangeCalls, button2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
